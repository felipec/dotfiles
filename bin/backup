#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'

$dry_run = false

$ops = { 'send' => '>', 'recv' => '<', 'del.' => '-' }

def rsync(src, dest, excludes: nil, sudo: false)
  cmd = %w[rsync --archive --delete --exclude-from=- --delete-excluded]
  cmd.prepend('sudo') if sudo
  cmd << "--out-format=%n\t%o"
  cmd << '--dry-run' if $dry_run
  cmd << src + '/'
  cmd << dest

  IO.popen(cmd, 'w+') do |pipe|
    pipe.write(excludes) if excludes
    pipe.close_write
    print "\e[s" if $stdout.isatty
    pipe.each do |e|
      file, op = e.chomp.split("\t")
      next if file.end_with?('/')
      if $stdout.isatty
        print "\e[2K\e[u"
        print "%s %.100s\e[K\r" % [$ops[op], file]
      else
        puts "%s %s" % [$ops[op], file]
      end
    end
  end
end

def backup(dest_path, src:, dest: src, excludes: nil)
  if $stdout.isatty
    puts "\e[1;34mBacking up '#{src}'\e[0m\033[K\n"
  else
    puts "Backing up '#{src}'"
  end

  rsync(src, dest_path + dest, excludes: excludes, sudo: true)
end

profile = ARGV.first || 'main'
config = Dir.home + "/.config/backup/#{profile}.yml"
$data = YAML.load_file(config, symbolize_names: true)

$data[:paths].each do |path|
  $data[:dest].each do |dest|
    if dest[:device]
      dev_path = '/dev/disk/by-label/' + dest[:device]
      next unless File.exist?(dev_path)
      dest_path = '/run/media/%s/%s' % [ENV['USER'], dest[:device]]
      system(*%w[udisksctl mount -b], dev_path, exception: true) unless File.exists?(dest_path)
      dest_path += dest[:dir] if dest[:dir]
    else
      dest_path = dest[:dir]
    end

    FileUtils.mkdir_p(dest_path) unless File.directory?(dest_path)

    backup(dest_path, **path)
  end
end
