#!/usr/bin/env ruby

require 'time'

$total_seconds = 24 * 60 * 60
$total_ticks = 2 ** 16

$today = Time.parse('00:00').to_i

def title(text)
  puts [nil, text, '-' * text.size]
end

def seconds_to_ticks(v)
  ((v.to_f * $total_ticks) / $total_seconds).to_i
end

def ticks_to_seconds(v)
  ((v.to_f * $total_seconds) / $total_ticks).to_i
end

def display(clock)
  seconds = ticks_to_seconds(clock)
  Time.at($today + seconds).strftime('%T')
end

def clock
  seconds_to_ticks(Time.now - $today)
end

=begin
title 'help'

16.times do |e|
  puts '%s: %s' % ['%04b' % e, display(e << 12)]
end

title 'clock'
puts '%016b' % clock()

title 'fancy'
=end

$clock = clock()
$simple = false

if $simple
  ('%016b' % $clock).scan(/.{4}/).each { |e| puts e.gsub('0', '   ').gsub('1', ' * ') }
else

  def human(time)
    if time < (2 * 60)
      '%02is' % [time]
    elsif time < (2 * 60 * 60)
      '%02im' % [time / 60]
    else
      '%02ih' % [time / (60 * 60)]
    end
  end

  16.times.reverse_each do |e|
    cur = 1 << e
    text = human(ticks_to_seconds(cur))
    color = ($clock & cur > 0) ? 32 : 0
    print "\e[%dm%s\e[m " % [color, text]
    print "\n" if (e % 4) == 0
  end

end

=begin
title 'display'
puts display(0b0100_0000_0000_0000)
=end

loop do
  c = clock()
  system(*%w[notify-send -u low -i appointment-soon -t 0] << ('%04b' % (c >> 12)))
  n = (c & 0xf000) + 0x1000
  s = Time.at($today + ticks_to_seconds(n)) - Time.now
  sleep(s + 1)
end
